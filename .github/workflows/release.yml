# Workflow for creating a new version release and deploying to GitHub Pages
# This workflow is manually triggered to:
# 1. Create a new version tag using semantic versioning
# 2. Convert the Marimo notebook to HTML-WASM format
# 3. Deploy the HTML to GitHub Pages

name: Bump version

# Trigger the workflow manually using the GitHub Actions UI
# This allows controlled releases when needed rather than on every push
on:
  workflow_dispatch

permissions:
  contents: write

jobs:
  # Job to generate a new version tag based on semantic versioning
  # This creates a new git tag with an incremented version number
  tagging:
    runs-on: ubuntu-latest
    outputs:
      # This output variable makes the tag available to other jobs in the workflow
      new_tag: ${{ steps.tag_version.outputs.new_tag }}
    steps:
      # Use the cradle/actions/tag action to generate a semantic version tag
      # This automatically determines the next version number based on commit messages
      - name: Generate Tag
        id: tag_version
        uses: tschm/cradle/actions/tag@v0.1.72
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

  # Job to build the HTML page from the Marimo notebook
  # This job converts the app.py Marimo notebook to HTML and prepares it for deployment
  # The build job exports marimo notebooks to static HTML/WebAssembly
  marimo:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner
    permissions:
      contents: read

    steps:
      - uses: jebel-quant/marimushka@v0.1.1
        with:
          apps: 'apps'
          publish: 'true'

  release:
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    needs: marimo
    steps:
      # Download all artifacts from previous jobs
      # This collects the outputs from both the jupyter and marimo jobs
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ${{ inputs.output }}

      - name: Inspect artifacts folder
        run: |
          tree artifacts

        # Package all artifacts for GitHub Pages deployment
        # This prepares the combined outputs for deployment
      - name: Upload static files as artifact
        id: upload
        uses: actions/upload-pages-artifact@v3 # or specific "vX.X.X" version tag for this action
        with:
          path: artifacts/  # Path to the directory containing all artifacts

      #- name: Deploy to GitHub Pages
      #  id: deployment
      #  uses: actions/deploy-pages@v4
